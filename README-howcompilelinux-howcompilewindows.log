[ HOW BUILD
	COMPILING IN WINDOWS
		1. Download the required software
		To compile The OTX Server on Windows, you will need:

			Visual Studio 2015 Enterprise : https://go.microsoft.com/fwlink/?LinkId=691979&clcid=0x409
			Libs (libraries) : https://mega.nz/#!VBgFAAqC!y2zI6EcRYbCKiyvhqKIbC9LjAvdGWWxU9dKrLqtCysQ
			Boost C++ libraries
				32-bit download : http://sourceforge.net/projects/boost/files/boost-binaries/1.60.0/boost_1_60_0-msvc-14.0-32.exe/download
				64-bit download : http://sourceforge.net/projects/boost/files/boost-binaries/1.60.0/boost_1_60_0-msvc-14.0-64.exe/download

		2. Install the required software
		Once you have downloaded the software listed in the step above, begin by installing Visual Studio and Boost C++ libraries. Extract "otx-sdk-1.0(NO-BOOST)" anywhere on your computer and run the file "registerenv.bat" to set the PATH environment variable for "SQK-NOBOOST", so that the compiler can find the libraries once we get to compiling the source code. Move the file "register_boost_env.bat" from "SQK-NOBOOST"  to the directory where you installed Boost C++ libraries and run it there (it should be in the directory called for example: C:\local\boost_1_60_0).

		Image Tutorial:

			Pic 1: http://2.ii.gl/IvRiM8Ab.png
			Pic 2: http://2.ii.gl/CO6eIaCF.png
			Pic 3: http://2.ii.gl/jQIwLqEn.png

		3. Download the source code
		If you have a Git client installed, you can clone the latest copy with this command:

			CodeGit:
			$ git clone https://github.com/mattyx14/otxserver.git

			Source:
			https://github.com/mattyx14/otxserver/archive/master.zip

		4. Build
		Find the directory msvc in the copy of The OTX Server that you downloaded, and open TheOTXServer.sln. This should launch Visual Studio, and you should be good to go.
		To configure the build, navigate to Build -> Configuration Manager in the menu. A dialog should pop up where you can choose between "Release" or "Release GUI" and  build, on 32-bit (Win32) or 64-bit (x64) build.
		To start compiling, open the Build menu again and click on Build Solution.
		If it no work for you "do not try to do this" (GOOD LOOK)

		Note: This only work for OTX Server 2.XS.1+ - and TFS 1.2+

	COMPILING IN UBUNTU LINUX
	A detailed and always up-to-date tutorial may be found here:
	Download required packages
		Launch a terminal, and paste in the following commands:
			apt-get install update
			apt-get install git subversion autoconf build-essential pkg-config libboost-dev libgmp3-dev libxml2-dev liblua5.1-0-dev libmysqlclient-dev ccache libboost-filesystem-dev libboost-regex-dev libboost-system-dev libboost-thread-dev screen libssl-dev

	Compiling
		Download sources - Launch a terminal, and paste in this command:
			git clone https://github.com/mattyx14/otxserver.git

		Launch a terminal, and type this:
			Into Folder run:
			sh ./autogen.sh && ./configure --enable-server-diag --enable-mysql --enable-root-permission && make -j 2

	Download required packages
		Service WEB:
		Ubuntu 10.04+ (Desktop Version):
			(Fix 127.0.1.1)		gksudo gedit /etc/hosts
				BugForm:
					127.0.0.1	localhost
					127.0.1.1	<ubuntu-server-name>

				Fixed Form
					127.0.0.1	localhost
					127.0.0.1	<ubuntu-user-name>

		(Use Apache)
		apt-get install apache2
		apt-get install libapache2-mod-php5
		apt-get install mysql-server
		apt-get install phpmyadmin

		* IMPORT WEB PAGE FIRST and run
			cd /var
			chmod 777 -R www

	***NOTE***
	For Linux Users, Rename /data/xml to /data/XML

	Finished - Shutdown Computer - Starting Computer - Run Server
	./theotxserver
]
